{"version":3,"sources":["components/DynamicTable.js","components/Button.js","components/App.js","index.js"],"names":["DynamicTable","_ref","cellSize","table","mouseOver","react_default","a","createElement","className","onMouseOver","map","item","key","id","tableArr","el","style","width","height","Button","buttonClass","_ref$propertyStyle","propertyStyle","_ref$valueStyle","valueStyle","_ref$text","text","buttonClick","Object","defineProperty","onClick","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addRow","state","newId","reduce","prev","cur","newTable","toConsumableArray","concat","setState","addColumn","itemId","objectSpread","delRow","_this$state","currentRowId","prevRowId","getIndexRow","length","filter","newCurrentRowId","rowVisibility","delColumn","_this$state2","currentColumnId","prevColumnId","getIndexColumn","newCell","newCurrentColumnId","columnVisibility","e","event","target","newRowId","parentElement","rowIndex","newColumnId","cellIndex","rowId","cellId","_this$state3","findIndex","_this$state4","indexOf","initialWidth","initialHeight","createTable","i","tdArray","j","push","_this$state5","rowPosition","columnPosition","padding","DynamicTable_DynamicTable","Button_Button","classNames","visibility","Component","defaultProps","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.35b6ae1a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const DynamicTable = ({ cellSize, table, mouseOver }) => {\r\n  return (\r\n    <table className=\"table\" onMouseOver={mouseOver}>\r\n      <tbody>\r\n        {table.map(item => (\r\n          <tr key={item.id} className=\"row\">\r\n            {item.tableArr.map(el => (\r\n              <td\r\n                key={el}\r\n                style={{\r\n                  width: cellSize,\r\n                  height: cellSize,\r\n                }}\r\n                className=\"cell\"\r\n              />\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Button = ({\r\n  buttonClass,\r\n  cellSize,\r\n  propertyStyle = 'left',\r\n  valueStyle = cellSize,\r\n  text = '+',\r\n  buttonClick,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={buttonClass}\r\n      style={{\r\n        width: cellSize,\r\n        height: cellSize,\r\n        [propertyStyle]: valueStyle,\r\n      }}\r\n      onClick={buttonClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};","import React, { Component } from 'react';\r\nimport { DynamicTable } from './DynamicTable';\r\nimport { Button } from './Button';\r\nimport classNames from 'classnames';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialWidth = props.initialWidth;\r\n    this.initialHeight = props.initialHeight;\r\n    this.cellSize = props.cellSize;\r\n    this.state = {\r\n      table: this.createTable(),\r\n      currentRowId: 0,\r\n      currentColumnId: 0,\r\n      rowVisibility: false,\r\n      columnVisibility: false,\r\n    };\r\n  }\r\n\r\n  createTable() {\r\n    let newTable = [];\r\n\r\n    for (let i = 0; i < this.initialHeight; i++) {\r\n      let tdArray = [];\r\n      for (let j = 0; j < this.initialWidth; j++) {\r\n        tdArray.push(j);\r\n      }\r\n      newTable.push({ id: i, tableArr: [...tdArray] });\r\n    }\r\n    return [...newTable];\r\n  }\r\n\r\n  addRow = () => {\r\n    const { table } = this.state;\r\n\r\n    const newId = table.reduce((prev, cur) => {\r\n      return prev.id > cur.id ? prev : cur;\r\n    });\r\n\r\n    const newTable = [\r\n      ...table,\r\n      { id: newId.id + 1, tableArr: table[0].tableArr.concat() },\r\n    ];\r\n\r\n    this.setState({ table: [...newTable] });\r\n  };\r\n\r\n  addColumn = () => {\r\n    const { table } = this.state;\r\n    let newId = 0;\r\n\r\n    const newTable = table.map(item => {\r\n      const itemId = item.tableArr.reduce((prev, cur) => {\r\n        return prev.id > cur.id ? prev : cur;\r\n      });\r\n\r\n      newId = itemId > newId ? itemId : newId;\r\n\r\n      return { ...item, tableArr: [...item.tableArr, newId + 1] };\r\n    });\r\n\r\n    this.setState({ table: [...newTable] });\r\n  };\r\n\r\n  delRow = () => {\r\n    const { table, currentRowId } = this.state;\r\n    const prevRowId = this.getIndexRow();\r\n\r\n    if (table.length <= 1) return;\r\n\r\n    const newTable = table.filter(item => {\r\n      return item.id !== currentRowId;\r\n    });\r\n\r\n    const newCurrentRowId =\r\n      newTable.length === prevRowId\r\n        ? newTable[prevRowId - 1].id\r\n        : newTable[prevRowId].id;\r\n\r\n    this.setState({\r\n      table: [...newTable],\r\n      rowVisibility: newTable.length > 1,\r\n      currentRowId: newCurrentRowId,\r\n    });\r\n  };\r\n\r\n  delColumn = () => {\r\n    const { table, currentColumnId } = this.state;\r\n    const prevColumnId = this.getIndexColumn();\r\n\r\n    if (table[0].tableArr.length <= 1) return;\r\n\r\n    const newTable = table.map(item => {\r\n      const newCell = item.tableArr.filter(el => {\r\n        return el !== currentColumnId;\r\n      });\r\n      return { ...item, tableArr: [...newCell] };\r\n    });\r\n\r\n    const newCurrentColumnId =\r\n      newTable[0].tableArr.length === prevColumnId\r\n        ? newTable[0].tableArr[prevColumnId - 1]\r\n        : newTable[0].tableArr[prevColumnId];\r\n\r\n    this.setState({\r\n      table: [...newTable],\r\n      columnVisibility: newTable[0].tableArr.length > 1,\r\n      currentColumnId: newCurrentColumnId,\r\n    });\r\n  };\r\n\r\n  mouseOver = e => {\r\n    const event = e.target;\r\n    const newRowId = event.parentElement.rowIndex;\r\n    const newColumnId = event.cellIndex;\r\n    const { table } = this.state;\r\n\r\n    if (newRowId == null || newColumnId == null) return;\r\n\r\n    const rowId = table[newRowId].id;\r\n    const cellId = table[newRowId].tableArr[newColumnId];\r\n\r\n    this.setState({\r\n      currentRowId: rowId,\r\n      currentColumnId: cellId,\r\n      rowVisibility: table.length > 1,\r\n      columnVisibility: table[0].tableArr.length > 1,\r\n    });\r\n  };\r\n\r\n  getIndexRow = () => {\r\n    const { table, currentRowId } = this.state;\r\n    return table.findIndex(item => item.id === currentRowId);\r\n  };\r\n\r\n  getIndexColumn = () => {\r\n    const { table, currentColumnId } = this.state;\r\n    return table[0].tableArr.indexOf(currentColumnId);\r\n  };\r\n\r\n  render() {\r\n    const { table, rowVisibility, columnVisibility } = this.state;\r\n    const rowPosition = (this.getIndexRow() + 1) * (this.cellSize + 4);\r\n    const columnPosition = (this.getIndexColumn() + 1) * (this.cellSize + 4);\r\n\r\n    return (\r\n      <div className=\"container\" style={{ padding: this.cellSize + 4 }}>\r\n        <DynamicTable\r\n          cellSize={this.cellSize}\r\n          table={table}\r\n          mouseOver={this.mouseOver}\r\n        />\r\n        <Button\r\n          buttonClass={'add-row'}\r\n          cellSize={this.cellSize}\r\n          buttonClick={this.addRow}\r\n        />\r\n        <Button\r\n          buttonClass={'add-column'}\r\n          cellSize={this.cellSize}\r\n          propertyStyle={'top'}\r\n          buttonClick={this.addColumn}\r\n        />\r\n        <Button\r\n          buttonClass={classNames('remove-row', { visibility: rowVisibility })}\r\n          cellSize={this.cellSize}\r\n          propertyStyle={'top'}\r\n          valueStyle={rowPosition}\r\n          text={'-'}\r\n          buttonClick={this.delRow}\r\n        />\r\n        <Button\r\n          buttonClass={classNames('remove-column', {\r\n            visibility: columnVisibility,\r\n          })}\r\n          cellSize={this.cellSize}\r\n          valueStyle={columnPosition}\r\n          text={'-'}\r\n          buttonClick={this.delColumn}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  initialWidth: 4,\r\n  initialHeight: 4,\r\n  cellSize: 50,\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App initialWidth={4} initialHeight={4} cellSize={50} />,\n  document.getElementById('app')\n);"],"sourceRoot":""}